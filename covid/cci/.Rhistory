setwd("~/github/expiMap_reproducibility/covid/cci")
### Load required modules
library(NMF)
library(dplyr)
library(igraph)
library(Matrix)
library(ggplot2)
library(CellChat)
library(patchwork)
library(ggalluvial)
library(reticulate)
options(stringsAsFactors = FALSE)
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/CTRL_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/CTRL_cellchat_net.csv')
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/P1D1_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/P1D1_cellchat_net.csv')
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/P1D5_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/P1D5_cellchat_net.csv')
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/P2D1_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/P2D1_cellchat_net.csv')
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/P2D5_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/P2D5_cellchat_net.csv')
### Read in data
ad <- import("anndata", convert = FALSE)
pd <- import("pandas", convert = FALSE)
ad_object <- ad$read_h5ad("/Users/carlos.lopez/Downloads/data/P2D7_anotated.h5ad")
### Access expression matrix
data.input <- t(py_to_r(ad_object$X))
### Add metadata
rownames(data.input) <- rownames(py_to_r(ad_object$var))
colnames(data.input) <- rownames(py_to_r(ad_object$obs))
meta.data <- py_to_r(ad_object$obs)
meta <- meta.data
### Create `cellchat` object
cellchat <- createCellChat(object = data.input, meta = meta, group.by = "celltype")
### Set up ligand-receptor interaction database for `cellchat`
CellChatDB <- CellChatDB.human
showDatabaseCategory(CellChatDB)
dplyr::glimpse(CellChatDB$interaction)
CellChatDB.use <- CellChatDB
cellchat@DB <- CellChatDB.use
### Process expression data
#future::plan("multiprocess", workers = 3)
#options(future.globals.maxSize = 8912896000)
cellchat <- subsetData(cellchat)
cellchat <- identifyOverExpressedGenes(cellchat)
cellchat <- identifyOverExpressedInteractions(cellchat)
cellchat <- projectData(cellchat, PPI.human)
cellchat <- computeCommunProb(cellchat, raw.use = TRUE)
cellchat <- filterCommunication(cellchat, min.cells = 5)
### Export results as dataframe
df.net <- subsetCommunication(cellchat)
head(df.net)
write.table(df.net, sep = ',', row.names = FALSE, '/Users/carlos.lopez/github/expiMap_reproducibility/covid/cci/inferences/P2D7_cellchat_net.csv')
